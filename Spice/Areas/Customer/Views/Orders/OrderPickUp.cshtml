@model Spice.Models.ViewModels.OrderListViewModel
@using Spice.Utility
@{
    ViewData["Title"] = "OrderPickUp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-12">
        <h2 class="text-info">Orders Ready for Pick-up</h2>
    </div>
</div>
<br />
<form method="get">
    <div class="border background-white">
        <div class="container border border-secondary" style="height:60px;">
            <div class="row container">
                <div class="col-11">
                    <div class="row" style="padding-top: 10px;">
                        <div class="col-4">
                            @Html.Editor("searchName", new { htmlAttributes = new { @class = "form-control", @placeholder = "Name..." } })
                        </div>
                        <div class="col-4">
                            @Html.Editor("searchPhone", new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone..." } })
                        </div>
                        <div class="col-4">
                            @Html.Editor("searchEmail", new { htmlAttributes = new { @class = "form-control", @placeholder = "Email..." } })
                        </div>
                    </div>
                </div>
                <div class="col-1">
                    <div class="row" style="padding-top: 10px;">
                        <button type="submit" name="submit" value="Search" class="btn btn-info form-control">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div>
            @if (Model.OrderDetailsViewModels.Any())
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            @Html.DisplayNameFor(m => m.OrderDetailsViewModels[0].OrderInfo.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.OrderDetailsViewModels[0].OrderInfo.PickUpName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.OrderDetailsViewModels[0].OrderInfo.ApplicationUser.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.OrderDetailsViewModels[0].OrderInfo.PickUpTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.OrderDetailsViewModels[0].OrderInfo.OrderTotal)
                        </th>
                        <th>
                            Total Items
                        </th>
                        <th></th>
                    </tr>
                    @foreach (var orderDetailsVM in Model.OrderDetailsViewModels)
                    {
                        <tr>
                            <td>
                                @orderDetailsVM.OrderInfo.Id
                            </td>
                            <td>
                                @orderDetailsVM.OrderInfo.PickUpName
                            </td>
                            <td>
                                @orderDetailsVM.OrderInfo.ApplicationUser.Email
                            </td>
                            <td>
                                @orderDetailsVM.OrderInfo.PickUpTime
                            </td>
                            <td>
                                @orderDetailsVM.OrderInfo.OrderTotal
                            </td>
                            <td>
                                @orderDetailsVM.OrderDetails.Count
                            </td>
                            <td>
                                <button type="button" class="btn btn-success anchorDetail" data-id="@orderDetailsVM.OrderInfo.Id" data-toggle="modal">
                                    <i class="far fa-list-alt"></i> Details
                                </button>
                            </td>
                        </tr>
                    }
                </table>
                <div page-model="@Model.PagingInfo" is-page-classes-enabled="true" page-class="btn border"
                     page-class-normal="btn btn-light" page-class-selected="btn btn-info active"
                     class="btn-group float-right">
                </div>
                <br />
            }
            else
            {
                <div class="pt-3">
                    <p>No order for pick up exists. Please check the search inputs if you have fill at least one.</p>
                </div>
            }
        </div>
    </div>
</form>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog-centered modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-success text-light">
                <div class="col-10 offset-1">
                    <center><h5 class="modal-title">Order Details</h5></center>
                </div>
                <div class="col-1">
                    <button type="button" class="float-right btn-outline-secondary close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>
            <div class="modal-body justify-content-center" id="myModalContent">
                @*Content of the body of the Modal*@
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var postBackURL = '/Customer/Orders/GetOrderDetails';

        $(function () {
            $(".anchorDetail").click(function () {
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                $.ajax({
                    type: "GET",
                    url: postBackURL,
                    contentType: "application/json; charset=utf-8",
                    data: { "Id": id },
                    cache: false,
                    datatype: "json",
                    success: function (data) {
                        $('#myModalContent').html(data);
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed");
                    }
                });
            });
        });
    </script>
}